package view;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import control.ClientCtr;
import model.ObjectWrapper;
import model.Player;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

/**
 *
 * @author Administrator
 */
public class RankingTableFrm extends javax.swing.JFrame {
    private ClientCtr myControl;
    private ArrayList<Player> playerlist;
    /**
     * Creates new form RankingTableFrm
     */
    public RankingTableFrm(ClientCtr myControl) {
        this.myControl = myControl;
        initComponents();
        this.setLocationRelativeTo(null);

        myControl.sendData(new ObjectWrapper(ObjectWrapper.RANK,""));
        myControl.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_RANK,this));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblranking = new javax.swing.JTable();
        btnback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Ranking Table");

        tblranking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblrankingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblranking);

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(157, 157, 157)
                                                .addComponent(jLabel1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(162, 162, 162)
                                                .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnback)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void tblrankingMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        this.dispose();
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblranking;
    // End of variables declaration

    public void receivedDataProcessing(ObjectWrapper data){
        switch (data.getPerformative()){
            case ObjectWrapper.REPLY_RANK:
                if(data.getData() instanceof ArrayList){

                    playerlist = (ArrayList<Player>) data.getData();
                    String[] columnNames = {"id","username", "status", "wins", "loses"};
                    String[][] value = new String[playerlist.size()][columnNames.length];
                    Collections.sort(playerlist, new Comparator<Player>() {
                        @Override
                        public int compare(Player p1, Player p2) {
                            int wr1 = p1.getWins() - p1.getLoses();
                            int wr2 = p2.getWins() - p2.getLoses();
                            if(wr1 > wr2){
                                return -1;
                            }else if(wr1 < wr2) {
                                return 1;
                            }else if(wr1 == wr2){
                                if(p1.getWins() > p2.getWins()) return -1;
                                else return 1;
                            }
                            return 0;
                        }
                    });
                    for(int i=0; i<playerlist.size(); i++){
                        value[i][0] = playerlist.get(i).getId() +"";
                        value[i][1] = playerlist.get(i).getUsername();
                        value[i][2] = playerlist.get(i).getStatus();
                        value[i][3] = playerlist.get(i).getWins() + "";
                        value[i][4] = playerlist.get(i).getLoses() + "";
                    }
                    DefaultTableModel tableModel = new DefaultTableModel(value, columnNames) {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            //unable to edit cells
                            return false;
                        }
                    };
                    tblranking.setModel(tableModel);
                }else JOptionPane.showMessageDialog(rootPane,"ERROR!");
                break;
        }
    }
}
